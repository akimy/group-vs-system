{"version":3,"sources":["actions/index.js","selectors/index.js","reducers/index.js","store.js","components/Log/index.jsx","components/Player/index.jsx","components/Team/index.jsx","components/Layout/index.jsx","App.js","reportWebVitals.js","index.js","components/Player/styles.module.css","components/Layout/styles.module.css","App.module.css","components/Log/styles.module.css","logo.svg","components/Team/styles.module.css"],"names":["makeActionCreator","type","_len","arguments","length","argNames","Array","_key","_len2","args","_key2","action","forEach","arg","index","addPlayer","removePlayer","togglePlayerStatus","togglePlayerFirstLive","togglePlayerSecondLive","shuffle","selectPlayerById","state","id","players","find","player","initialState","handlers","getRandomArrEl","arr","Math","floor","random","generateLog","message","logs","uuidv4","time","Date","toLocaleTimeString","hour","minute","concat","Object","toConsumableArray","createReducer","_createReducer","defineProperty","_ref","name","teamN","objectSpread","isActive","firstLive","secondLive","inBattle","_ref2","filter","_ref3","findIndex","clone","_ref4","_ref5","_ref6","p1","p2","isFinished","team1ActivePlayers","team2ActivePlayers","removeInBattleStatusForList","undefined","hasOwnProperty","preloadedState","animationActive","configureStore","composedEnhancers","composeWithDevTools","apply","createStore","rootReducer","Log","useSelector","react_default","a","createElement","className","styles","root","title","map","log","key","Player","dispatch","useDispatch","onTogglePlayerFirstLive","onTogglePlayerSecondLive","cn","rootActive","rootDisabled","clearIcon","Clear_default","fontSize","color","onClick","onRemovePlayer","controls","Favorite_default","FavoriteBorder_default","Checkbox","checked","onChange","onTogglePlayerStatus","size","sx","red","&.Mui-checked","Team","teamPlayers","react","components_Player","input","TextField","label","variant","onKeyDown","event","keyCode","target","value","selectVsPlayers","getActivePlayersCount","selectIsLeftButtonDisabled","activePlayersCount","Boolean","selectIsRightButtonDisabled","selectIsMainButtonDisabled","team1ActivePlayersCount","team2ActivePlayersCount","dispatchShuffle","_loop","i","setTimeout","Layout","_useSelector","isLeftButtonDisabled","isRightButtonDisabled","isMainButtonDisabled","showVsString","components_Log","battlefield","wrapper","vsString","components_Team","separator","Button","disabled","endIcon","Cyclone_default","mainButton","App","es","store","app","appHeader","src","logo","appLogo","alt","components_Layout","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById","module","exports","App-logo-spin","p"],"mappings":"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","file":"static/js/main.61c51cdd.chunk.js","sourcesContent":["function makeActionCreator(type, ...argNames) {\r\n    return function (...args) {\r\n            const action = { type }\r\n            argNames.forEach((arg, index) => {\r\n            action[argNames[index]] = args[index]\r\n        })\r\n\r\n        return action\r\n    }\r\n}\r\n  \r\n\r\nexport const ADD_PLAYER = 'ADD_PLAYER';\r\nexport const REMOVE_PLAYER = 'REMOVE_PLAYER';\r\nexport const TOGGLE_PLAYER_STATUS = 'TOGGLE_PLAYER_STATUS';\r\nexport const TOGGLE_PLAYER_1ST_LIVE = 'TOGGLE_PLAYER_1ST_LIVE';\r\nexport const TOGGLE_PLAYER_2ND_LIVE = 'TOGGLE_PLAYER_2ND_LIVE';\r\nexport const SHUFFLE = 'SHUFFLE';\r\nexport const SHUFFLE_END = 'SHUFFLE_END';\r\nexport const WRITE_LOG = 'WRITE_LOG';\r\n\r\nexport const addPlayer = makeActionCreator(ADD_PLAYER, 'id', 'name', 'teamN');\r\nexport const removePlayer = makeActionCreator(REMOVE_PLAYER, 'id');\r\nexport const togglePlayerStatus = makeActionCreator(TOGGLE_PLAYER_STATUS, 'id');\r\nexport const togglePlayerFirstLive = makeActionCreator(TOGGLE_PLAYER_1ST_LIVE, 'id');\r\nexport const togglePlayerSecondLive = makeActionCreator(TOGGLE_PLAYER_2ND_LIVE, 'id');\r\nexport const shuffle = makeActionCreator(SHUFFLE, 'isFinished', 'teamN');\r\nexport const shuffleEnd = makeActionCreator(SHUFFLE_END);\r\nexport const writeLog = makeActionCreator(WRITE_LOG, 'message');","export const selectPlayerById = (state, id) => {\r\n    return state.players.find(player => player.id === id);\r\n}","import { clone } from 'ramda';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { ADD_PLAYER, REMOVE_PLAYER, SHUFFLE, TOGGLE_PLAYER_STATUS, TOGGLE_PLAYER_1ST_LIVE, TOGGLE_PLAYER_2ND_LIVE } from \"../actions\"\r\nimport { selectPlayerById } from '../selectors';\r\n\r\nconst removeInBattleStatusForList = (players) => {\r\n    players.forEach(player => {\r\n        player.inBattle = false;\r\n    });\r\n};\r\n\r\nfunction createReducer(initialState, handlers) {\r\n    return function reducer(state = initialState, action) {\r\n        if (handlers.hasOwnProperty(action.type)) {\r\n            return handlers[action.type](state, action)\r\n        } else {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nconst getRandomArrEl = (arr) => {\r\n    const index = Math.floor(Math.random() * arr.length);\r\n\r\n    return arr[index];\r\n}\r\n\r\nconst generateLog = (state, message) => {\r\n    const logs = state.logs;\r\n\r\n    return [\r\n        {id: uuidv4(), message, time: new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})},\r\n        ...logs,\r\n    ];\r\n}\r\n\r\nexport default createReducer([], {\r\n    [ADD_PLAYER]: (state, {id, name, teamN}) => {\r\n        \r\n       return {\r\n           ...state,\r\n           players: [\r\n               ...state.players,\r\n               {id, name, teamN, isActive: true, firstLive: true, secondLive: true, inBattle: false},\r\n           ],\r\n           logs: generateLog(state, `${name} added to team #${teamN}`),\r\n       };\r\n    },\r\n\r\n    [REMOVE_PLAYER]: (state, {id}) => {\r\n        const player = selectPlayerById(state, id);\r\n\r\n        return {\r\n            ...state,\r\n            players: state.players.filter(player => player.id !== id),\r\n            logs: generateLog(state, `${player.name} removed`),\r\n        }\r\n    },\r\n\r\n    [TOGGLE_PLAYER_STATUS]: (state, {id}) => {\r\n        const player = selectPlayerById(state, id);\r\n\r\n        const index = state.players.findIndex(player => player.id === id);\r\n        const players = clone(state.players);\r\n\r\n        players[index].isActive = !players[index].isActive;\r\n\r\n        return {\r\n            ...state,\r\n            players,\r\n            logs: generateLog(state, `${player.name} is now ${player.isActive ? 'inactive' : 'active'}`),\r\n        }\r\n    },\r\n\r\n    [TOGGLE_PLAYER_1ST_LIVE]: (state, {id}) => {\r\n        const player = selectPlayerById(state, id);\r\n\r\n        const index = state.players.findIndex(player => player.id === id);\r\n        const players = clone(state.players);\r\n\r\n        players[index].firstLive = !players[index].firstLive;\r\n\r\n        return {\r\n            ...state,\r\n            players,\r\n            logs: generateLog(state, `${player.name} ${!players[index].firstLive ? 'lost one live' : 'recieved one live'}`),\r\n        }\r\n    },\r\n\r\n    [TOGGLE_PLAYER_2ND_LIVE]: (state, {id}) => {\r\n        const player = selectPlayerById(state, id);\r\n\r\n        const index = state.players.findIndex(player => player.id === id);\r\n        const players = clone(state.players);\r\n\r\n        players[index].secondLive = !players[index].secondLive;\r\n\r\n        return {\r\n            ...state,\r\n            players,\r\n            logs: generateLog(state, `${player.name} ${!players[index].secondLive ? 'lost one live' : 'recieved one live'}`),\r\n        }\r\n    },\r\n\r\n    [SHUFFLE]: (state, {isFinished, teamN}) => {\r\n        const players = clone(state.players);\r\n\r\n        const team1ActivePlayers = players.filter(player => player.teamN === 1 && player.isActive);\r\n        const team2ActivePlayers = players.filter(player => player.teamN === 2 && player.isActive);\r\n\r\n        if (team1ActivePlayers.length === 0 || team2ActivePlayers.length === 0) {\r\n            return state;\r\n        }\r\n\r\n        let p1, p2;\r\n\r\n        switch (teamN) {\r\n            case 1: {\r\n                p1 = getRandomArrEl(team1ActivePlayers);\r\n                p2 = team2ActivePlayers.find(player => player.inBattle);\r\n\r\n                break;\r\n            }\r\n\r\n            case 2: {\r\n                p2 = getRandomArrEl(team2ActivePlayers);\r\n                p1 = team1ActivePlayers.find(player => player.inBattle);\r\n\r\n                break;\r\n            }\r\n\r\n            default: {\r\n                p1 = getRandomArrEl(team1ActivePlayers);\r\n                p2 = getRandomArrEl(team2ActivePlayers);\r\n            }\r\n        }\r\n\r\n        removeInBattleStatusForList(players);\r\n\r\n        p1.inBattle = true;\r\n        p2.inBattle = true;\r\n\r\n        return {\r\n            ...state,\r\n            players,\r\n            logs: isFinished ? generateLog(state, `Match started ${p1.name} vs ${p2.name}`) : state.logs,\r\n        }\r\n    }\r\n})","import { createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport rootReducer from './reducers'\r\n\r\n\r\nconst preloadedState = {\r\n    players: [],\r\n    animationActive: false,\r\n    logs: [],\r\n}\r\n\r\nexport default function configureStore() {\r\n    const enhancers = []\r\n    const composedEnhancers = composeWithDevTools(...enhancers)\r\n  \r\n    const store = createStore(rootReducer, preloadedState, composedEnhancers)\r\n  \r\n    return store;\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nconst Log = () => {\r\n    const logs = useSelector((state) => state.logs);\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            <h2 className={styles.title}>LOG</h2>\r\n\r\n            {logs.map(log => (\r\n                <div className={styles.log} key={log.id}>\r\n                    <span className={styles.time}>{log.time}</span> \r\n                    {log.message}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Log;","import React from 'react';\r\nimport cn from 'classnames';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { red } from '@mui/material/colors';\r\n\r\nimport styles from './styles.module.css';\r\nimport { removePlayer, togglePlayerSecondLive, togglePlayerFirstLive, togglePlayerStatus } from '../../actions';\r\n\r\nconst Player = ({id}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const onRemovePlayer = (id) => dispatch(removePlayer(id));\r\n    const onTogglePlayerStatus = (id) => dispatch(togglePlayerStatus(id));\r\n    const onTogglePlayerFirstLive = (id) => dispatch(togglePlayerFirstLive(id));\r\n    const onTogglePlayerSecondLive = (id) => dispatch(togglePlayerSecondLive(id));\r\n\r\n    const player = useSelector((state) => state.players.find(player => player.id === id));\r\n\r\n    const {name, isActive, firstLive, secondLive, inBattle} = player;\r\n\r\n    return (\r\n        <div className={cn(styles.root, inBattle && styles.rootActive, !isActive && styles.rootDisabled)}>\r\n            <div className={styles.name}>\r\n                {name}\r\n\r\n                <div className={styles.clearIcon}>\r\n                    <ClearIcon fontSize=\"small\" color=\"error\" onClick={() => onRemovePlayer(id)}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.controls}>\r\n                {firstLive ? <FavoriteIcon fontSize=\"small\" color=\"error\" onClick={() => onTogglePlayerFirstLive(id)} /> : <FavoriteBorderIcon fontSize=\"small\" color=\"error\" onClick={() => onTogglePlayerFirstLive(id)} /> }\r\n                {secondLive ? <FavoriteIcon fontSize=\"small\" color=\"error\" onClick={() => onTogglePlayerSecondLive(id)}/> : <FavoriteBorderIcon fontSize=\"small\" color=\"error\" onClick={() => onTogglePlayerSecondLive(id)} />}\r\n\r\n                <Checkbox\r\n                    checked={isActive}\r\n                    onChange={() => onTogglePlayerStatus(id)}\r\n                    size=\"small\"\r\n                    sx={{\r\n                    color: red[800],\r\n                        '&.Mui-checked': {\r\n                            color: red[600],\r\n                        },\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;","import React, {Fragment} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport Player from '../Player';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nimport { addPlayer } from '../../actions';\r\n\r\nconst Team = ({teamN}) => {\r\n    const dispatch = useDispatch();\r\n    const onEnterName = (name) => dispatch(addPlayer(uuidv4(), name, teamN));\r\n    const teamPlayers = useSelector((state) => state.players.filter(player => player.teamN === teamN));\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={styles.root}>\r\n                {teamPlayers.map(({id, name}) => <Player key={id} id={id} name={name} />)}\r\n\r\n                <div className={styles.input}>\r\n                    <TextField id=\"standard-basic\" label=\"Add player\" variant=\"standard\" onKeyDown={(event => {\r\n                        if (event.keyCode === 13) {\r\n                            const target = event.target;\r\n\r\n                            onEnterName(target.value);\r\n                            target.value = '';\r\n                        }\r\n                    })} />\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Team;","import React from 'react';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport CycloneIcon from '@mui/icons-material/Cyclone';\r\nimport Log from '../Log';\r\nimport Team from '../Team';\r\n\r\nimport styles from './styles.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { shuffle } from '../../actions';\r\n\r\nconst selectVsPlayers = (state) => {\r\n    const players = state.players;\r\n\r\n    const p1 = players.find(player => player.teamN === 1 && player.inBattle && player.isActive);\r\n    const p2 = players.find(player => player.teamN === 2 && player.inBattle && player.isActive);\r\n\r\n    return {\r\n        p1, p2,\r\n    }\r\n}\r\n\r\nconst getActivePlayersCount = (players, teamN) => {\r\n    return players\r\n        .filter(player => player.teamN === teamN && player.isActive === true && player.inBattle === false).length;\r\n}\r\n\r\nconst selectIsLeftButtonDisabled = (state) => {\r\n    const players = state.players;\r\n\r\n    const activePlayersCount = getActivePlayersCount(players, 1);\r\n    const {p2} = selectVsPlayers(state);\r\n\r\n    return activePlayersCount === 0 || !Boolean(p2);\r\n}\r\n\r\nconst selectIsRightButtonDisabled = (state) => {\r\n    const players = state.players;\r\n\r\n    const activePlayersCount = getActivePlayersCount(players, 2);\r\n        const {p1} = selectVsPlayers(state);\r\n\r\n    return activePlayersCount === 0  || !Boolean(p1);\r\n}\r\n\r\nconst selectIsMainButtonDisabled = (state) => {\r\n    const players = state.players;\r\n\r\n    const team1ActivePlayersCount = getActivePlayersCount(players, 1);\r\n    const team2ActivePlayersCount = getActivePlayersCount(players, 2);\r\n\r\n    return team1ActivePlayersCount === 0 || team2ActivePlayersCount === 0;\r\n}\r\n\r\nconst dispatchShuffle = (dispatch, teamN = null) => {\r\n    let maxCount = 15;\r\n\r\n    for(let i = 0; i <= maxCount; i++) {\r\n        let isFinished = i === maxCount;\r\n\r\n        setTimeout(() => {\r\n            dispatch(shuffle(isFinished, teamN));\r\n        }, 70 * i)\r\n    }\r\n}\r\n\r\nconst Layout = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const onShuffle = () => {\r\n        dispatchShuffle(dispatch, null)\r\n    };\r\n\r\n    const onShuffleL = () => {\r\n        dispatchShuffle(dispatch, 1)\r\n    };\r\n\r\n    const onShuffleR = () => {\r\n        dispatchShuffle(dispatch, 2)\r\n    };\r\n\r\n    const {p1, p2} = useSelector(selectVsPlayers);\r\n    const isLeftButtonDisabled = useSelector(selectIsLeftButtonDisabled);\r\n    const isRightButtonDisabled = useSelector(selectIsRightButtonDisabled);\r\n    const isMainButtonDisabled = useSelector(selectIsMainButtonDisabled);\r\n\r\n    const showVsString = Boolean(p1) && Boolean(p2);\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            <Log />\r\n\r\n            <div className={styles.battlefield}>\r\n                <div className={styles.wrapper}>\r\n                    {showVsString && (\r\n                        <div className={styles.vsString}>\r\n                            {p1.name} vs {p2.name}\r\n                        </div>\r\n                    )}\r\n\r\n                    <Team teamN={1} />\r\n\r\n                    <div className={styles.separator}></div>\r\n\r\n                    <Team teamN={2} />\r\n                </div>\r\n\r\n                <div>\r\n                    <Button disabled={isLeftButtonDisabled} onClick={onShuffleL} variant=\"contained\" color=\"error\" endIcon={<CycloneIcon /> }>\r\n                        L\r\n                    </Button>\r\n\r\n                    <Button disabled={isMainButtonDisabled} className={styles.mainButton} onClick={onShuffle} variant=\"contained\" color=\"error\" endIcon={<CycloneIcon /> }>\r\n                        Start\r\n                    </Button>\r\n\r\n                    <Button disabled={isRightButtonDisabled} onClick={onShuffleR} variant=\"contained\" color=\"error\" endIcon={<CycloneIcon /> }>\r\n                        R\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport styles from './App.module.css';\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './store'\r\nimport Layout from './components/Layout'\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={configureStore()}>\r\n      <div className={styles.app}>\r\n        <header className={styles.appHeader}>\r\n          <img src={logo} className={styles.appLogo} alt=\"logo\" />\r\n\r\n          <h1 className={styles.title}>\r\n            Tekken Group VS System \r\n          </h1>\r\n        </header>\r\n\r\n        <Layout />\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2iJXA\",\"clearIcon\":\"styles_clearIcon__bPkNH\",\"controls\":\"styles_controls__3Y0sM\",\"rootActive\":\"styles_rootActive__7GjpF\",\"rootDisabled\":\"styles_rootDisabled__2lkJb\",\"name\":\"styles_name__3pf0v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__R6jQW\",\"battlefield\":\"styles_battlefield__3wzGZ\",\"wrapper\":\"styles_wrapper__RkgXi\",\"separator\":\"styles_separator__1GQcm\",\"vsString\":\"styles_vsString__3GrTs\",\"mainButton\":\"styles_mainButton__1n76P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3rd5h\",\"appLogo\":\"App_appLogo__uPv6G\",\"title\":\"App_title__2H4-c\",\"App-logo-spin\":\"App_App-logo-spin__2Jd8e\",\"appHeader\":\"App_appHeader__36oj6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__AkpRS\",\"time\":\"styles_time__1g8XD\",\"title\":\"styles_title__3DYrk\",\"log\":\"styles_log__PFzm5\"};","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2jUEJ\",\"input\":\"styles_input__21o8u\"};"],"sourceRoot":""}